{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response$data, _error$response2, _error$response2$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message;\n  throw new Error(message);\n});\n\n// Products API\nexport const fetchProducts = async (limit = 50, pageInfo = null) => {\n  const params = {\n    limit\n  };\n  if (pageInfo) params.page_info = pageInfo;\n  const response = await api.get('/products', {\n    params\n  });\n  return response.data;\n};\nexport const fetchProduct = async productId => {\n  const response = await api.get(`/products/${productId}`);\n  return response.data;\n};\nexport const searchProducts = async query => {\n  const response = await api.get(`/products/search/${encodeURIComponent(query)}`);\n  return response.data;\n};\nexport const duplicateProduct = async ({\n  productId,\n  titleSuffix,\n  bundleProducts,\n  discount\n}) => {\n  const response = await api.post(`/products/${productId}/duplicate`, {\n    titleSuffix,\n    bundleProducts,\n    discount\n  });\n  return response.data;\n};\nexport const updateProduct = async (productId, productData) => {\n  const response = await api.put(`/products/${productId}`, productData);\n  return response.data;\n};\n\n// Bundle API\nexport const createBundle = async bundleData => {\n  const response = await api.post('/bundles/create', bundleData);\n  return response.data;\n};\nexport const fetchBundles = async () => {\n  const response = await api.get('/bundles');\n  return response.data;\n};\nexport const fetchBundleConfig = async bundleId => {\n  const response = await api.get(`/bundles/${bundleId}/config`);\n  return response.data;\n};\nexport const generateBundleCartData = async (bundleProductId, variantId, quantity = 1) => {\n  const response = await api.post('/bundles/cart-data', {\n    bundleProductId,\n    variantId,\n    quantity\n  });\n  return response.data;\n};\nexport const calculateBundlePrice = async (bundleProductId, quantity = 1) => {\n  const response = await api.post('/bundles/calculate-price', {\n    bundleProductId,\n    quantity\n  });\n  return response.data;\n};\n\n// Orders API\nexport const fetchOrders = async (limit = 50, status = 'any') => {\n  const response = await api.get('/orders', {\n    params: {\n      limit,\n      status\n    }\n  });\n  return response.data;\n};\nexport const fetchBundleOrders = async (limit = 50) => {\n  const response = await api.get('/orders/bundles', {\n    params: {\n      limit\n    }\n  });\n  return response.data;\n};\nexport const fetchBundleAnalytics = async (days = 30) => {\n  const response = await api.get('/orders/bundle-analytics', {\n    params: {\n      days\n    }\n  });\n  return response.data;\n};\n\n// Shopify API\nexport const testShopifyConnection = async () => {\n  const response = await api.get('/shopify/test-connection');\n  return response.data;\n};\nexport const fetchShopInfo = async () => {\n  const response = await api.get('/shopify/shop-info');\n  return response.data;\n};\nexport const validateShopifyToken = async () => {\n  const response = await api.get('/shopify/validate-token');\n  return response.data;\n};\nexport const fetchApiUsage = async () => {\n  const response = await api.get('/shopify/api-usage');\n  return response.data;\n};\nexport const fetchShopifyPermissions = async () => {\n  const response = await api.get('/shopify/permissions');\n  return response.data;\n};\n\n// Utility functions\nexport const formatPrice = price => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(price);\n};\nexport const formatDate = date => {\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(new Date(date));\n};\nexport const generateBundleSlug = title => {\n  return title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n};\n\n// Cart transformation utilities (for frontend integration)\nexport const addBundleToCart = async (bundleProductId, variantId, quantity = 1) => {\n  try {\n    // Get bundle cart data\n    const cartData = await generateBundleCartData(bundleProductId, variantId, quantity);\n\n    // This would typically integrate with Shopify's Ajax Cart API\n    // For demo purposes, we'll return the cart items structure\n    return {\n      success: true,\n      cartItems: cartData.cartItems,\n      bundleInfo: cartData.bundleInfo\n    };\n  } catch (error) {\n    throw new Error(`Failed to add bundle to cart: ${error.message}`);\n  }\n};\n\n// Demo cart integration (this would be replaced with actual Shopify cart integration)\nexport const simulateCartAdd = cartItems => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Adding to cart:', cartItems);\n      resolve({\n        success: true,\n        message: 'Bundle added to cart successfully!'\n      });\n    }, 1000);\n  });\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","response","use","data","error","_error$response","_error$response$data","_error$response2","_error$response2$data","message","Error","fetchProducts","limit","pageInfo","params","page_info","get","fetchProduct","productId","searchProducts","query","encodeURIComponent","duplicateProduct","titleSuffix","bundleProducts","discount","post","updateProduct","productData","put","createBundle","bundleData","fetchBundles","fetchBundleConfig","bundleId","generateBundleCartData","bundleProductId","variantId","quantity","calculateBundlePrice","fetchOrders","status","fetchBundleOrders","fetchBundleAnalytics","days","testShopifyConnection","fetchShopInfo","validateShopifyToken","fetchApiUsage","fetchShopifyPermissions","formatPrice","price","Intl","NumberFormat","style","currency","format","formatDate","date","DateTimeFormat","year","month","day","hour","minute","Date","generateBundleSlug","title","toLowerCase","replace","addBundleToCart","cartData","success","cartItems","bundleInfo","simulateCartAdd","Promise","resolve","setTimeout","console","log"],"sources":["/Users/ankurpandey/Downloads/App-v2-new-working-copy-2-restored/TikTokCloneMobile/InstaBot/GST/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    const message = error.response?.data?.error || error.response?.data?.message || error.message;\n    throw new Error(message);\n  }\n);\n\n// Products API\nexport const fetchProducts = async (limit = 50, pageInfo = null) => {\n  const params = { limit };\n  if (pageInfo) params.page_info = pageInfo;\n  \n  const response = await api.get('/products', { params });\n  return response.data;\n};\n\nexport const fetchProduct = async (productId) => {\n  const response = await api.get(`/products/${productId}`);\n  return response.data;\n};\n\nexport const searchProducts = async (query) => {\n  const response = await api.get(`/products/search/${encodeURIComponent(query)}`);\n  return response.data;\n};\n\nexport const duplicateProduct = async ({ productId, titleSuffix, bundleProducts, discount }) => {\n  const response = await api.post(`/products/${productId}/duplicate`, {\n    titleSuffix,\n    bundleProducts,\n    discount\n  });\n  return response.data;\n};\n\nexport const updateProduct = async (productId, productData) => {\n  const response = await api.put(`/products/${productId}`, productData);\n  return response.data;\n};\n\n// Bundle API\nexport const createBundle = async (bundleData) => {\n  const response = await api.post('/bundles/create', bundleData);\n  return response.data;\n};\n\nexport const fetchBundles = async () => {\n  const response = await api.get('/bundles');\n  return response.data;\n};\n\nexport const fetchBundleConfig = async (bundleId) => {\n  const response = await api.get(`/bundles/${bundleId}/config`);\n  return response.data;\n};\n\nexport const generateBundleCartData = async (bundleProductId, variantId, quantity = 1) => {\n  const response = await api.post('/bundles/cart-data', {\n    bundleProductId,\n    variantId,\n    quantity\n  });\n  return response.data;\n};\n\nexport const calculateBundlePrice = async (bundleProductId, quantity = 1) => {\n  const response = await api.post('/bundles/calculate-price', {\n    bundleProductId,\n    quantity\n  });\n  return response.data;\n};\n\n// Orders API\nexport const fetchOrders = async (limit = 50, status = 'any') => {\n  const response = await api.get('/orders', { \n    params: { limit, status } \n  });\n  return response.data;\n};\n\nexport const fetchBundleOrders = async (limit = 50) => {\n  const response = await api.get('/orders/bundles', { \n    params: { limit } \n  });\n  return response.data;\n};\n\nexport const fetchBundleAnalytics = async (days = 30) => {\n  const response = await api.get('/orders/bundle-analytics', { \n    params: { days } \n  });\n  return response.data;\n};\n\n// Shopify API\nexport const testShopifyConnection = async () => {\n  const response = await api.get('/shopify/test-connection');\n  return response.data;\n};\n\nexport const fetchShopInfo = async () => {\n  const response = await api.get('/shopify/shop-info');\n  return response.data;\n};\n\nexport const validateShopifyToken = async () => {\n  const response = await api.get('/shopify/validate-token');\n  return response.data;\n};\n\nexport const fetchApiUsage = async () => {\n  const response = await api.get('/shopify/api-usage');\n  return response.data;\n};\n\nexport const fetchShopifyPermissions = async () => {\n  const response = await api.get('/shopify/permissions');\n  return response.data;\n};\n\n// Utility functions\nexport const formatPrice = (price) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  }).format(price);\n};\n\nexport const formatDate = (date) => {\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  }).format(new Date(date));\n};\n\nexport const generateBundleSlug = (title) => {\n  return title\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/(^-|-$)/g, '');\n};\n\n// Cart transformation utilities (for frontend integration)\nexport const addBundleToCart = async (bundleProductId, variantId, quantity = 1) => {\n  try {\n    // Get bundle cart data\n    const cartData = await generateBundleCartData(bundleProductId, variantId, quantity);\n    \n    // This would typically integrate with Shopify's Ajax Cart API\n    // For demo purposes, we'll return the cart items structure\n    return {\n      success: true,\n      cartItems: cartData.cartItems,\n      bundleInfo: cartData.bundleInfo\n    };\n  } catch (error) {\n    throw new Error(`Failed to add bundle to cart: ${error.message}`);\n  }\n};\n\n// Demo cart integration (this would be replaced with actual Shopify cart integration)\nexport const simulateCartAdd = (cartItems) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Adding to cart:', cartItems);\n      resolve({\n        success: true,\n        message: 'Bundle added to cart successfully!'\n      });\n    }, 1000);\n  });\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}